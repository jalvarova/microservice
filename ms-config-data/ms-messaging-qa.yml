server:
  port: ${PORT:9001}
---
spring:
  application:
    name: ms-messaging
---
info:
  project:
    version: 1.0.0
    name: ms-messaging
    description: Microservice de clientes
---
management:
  endpoint:
    prometheus:
      enabled: true
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  endpoints:
    web:
      #base-path: /ms-clients
      path-mapping:
        prometheus: /metrics
      exposure:
        include:
          - actuator
          - health
          - info
          - metrics
          - prometheus
        exclude:
---
sendgrid:
  queueName: demo_q
  from: ${EMAIL_FROM}
  reply: ${EMAIL_REPLAY}
  subject: "Envio de operacion de currency transaction"
  key: ${ACCESS_KEY}
  id: ${TEMPLATE_ID}
---
spring:
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USR:user}
    password: ${RABBITMQ_PWD:password}
    listener:
      direct:
        retry:
          max-attempts: 3
          max-interval: 30s
---
feign:
  client:
    config:
      event-service:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
---
event:
  uri: ${URI_EVENT:http://localhost:9545/ms-mediator-event/api/v1}
  app: hta
  origin: transaction
  destination: messaging
  domain: currency-exchange
---
spring:
  data:
    mongodb:
      uri: ${MONGO_URI:mongodb://localhost:27017}
      database: ${MONGO_DATABASE:messagingdb}
---
eureka:
  client:
    fetch-registry: true
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
    eureka-server-connect-timeout-seconds: 30
    registryFetchIntervalSeconds: 10
  instance:
    preferIpAddress: false